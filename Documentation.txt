*AUTHOR Jamie Mason 
Last edit Sunday, March 17th 2024*

This collection of code files comprises a versatile utility for creating interactive console-based menus and launching a Pong game application. The core component, MenuOutput, defined in MenuOutput.h and implemented in MenuOutput.cpp, offers a comprehensive set of functionalities for menu creation, option selection, and screen display. It provides flexible options for aligning text within bordered boxes, handling user input validation, and clearing the console screen. The assignment2Pong.cpp file serves as the entry point for the Pong game, leveraging the MenuOutput class to present a menu interface to the user. Platform-specific directives ensure seamless compatibility across different operating systems, enhancing the portability of the application. Together, these files constitute a robust framework for enhancing user interaction in console-based applications, exemplifying modularity, efficiency, and ease of use.

MenuOutput Class Functions:

This code defines a class MenuOutput that represents a menu with options displayed on the console. Here's a summary of its functionality:

The constructor MenuOutput::MenuOutput() initializes the preTextAst and postTextAst members to 0 and calls the setOptions() function.

The setOptions() function dynamically allocates memory for the options array and sets its elements to specific strings representing menu options.

The clearScreen() function clears the console screen based on the operating system (Windows or Unix-like).

getOptions(), getTitle(), and getSize() functions provide access to the menu options, title, and size, respectively.

Functions like printBoxAlignAtLeft(), printBoxAlignAtRight(), and printBoxAlignAtCentre() print the menu options aligned to the left, right, and center, respectively.

printOptionLine() prints a single line of the menu with proper formatting.

findLongestString() calculates the length of the longest string in an array of strings.

setZeroIfNegative() ensures that a given number is non-negative.

printTitle() prints the title of the menu.

printAsterisksAtBottom() prints asterisks at the bottom of the menu.

printAsterisk() and printEmptyAsteriskLine() print asterisks and an empty line of asterisks, respectively.

printSpaces() and printSpacesBeforeOptions() print spaces before the menu options.

getUserInputNumInRange() function gets user input within a specified range.

displayMenu() displays the entire menu, including title, options, and bottom asterisks.

handleOptionSelection() function handles user input for menu options.

The destructor MenuOutput::~MenuOutput() deallocates memory for the options array.

assignment2Pong.cpp Functions:

main(): Entry point for the Pong game application, initializes a MenuOutput instance with the title "PONG" and displays the menu interface.


I have not yet implemented the game or the high score table yet.
